
STM32F0308_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000070c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007cc  080007d4  000107d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007cc  080007cc  000107d4  2**0
                  CONTENTS
  4 .ARM          00000000  080007cc  080007cc  000107d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007cc  080007d4  000107d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007cc  080007cc  000107cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080007d0  080007d0  000107d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000107d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080007d4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080007d4  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000107d4  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000107fc  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000904  00000000  00000000  0001083f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000277  00000000  00000000  00011143  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  000113c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00011488  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000014ef  00000000  00000000  00011514  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000e12  00000000  00000000  00012a03  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004f4e  00000000  00000000  00013815  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000208  00000000  00000000  00018764  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000003f  00000000  00000000  0001896c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080007b4 	.word	0x080007b4

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	080007b4 	.word	0x080007b4

08000108 <main>:

	}
}

int main(void)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b08a      	sub	sp, #40	; 0x28
 800010c:	af00      	add	r7, sp, #0
	GPIO_PeriClockControl(GPIOC, ENABLE);
 800010e:	4b2a      	ldr	r3, [pc, #168]	; (80001b8 <main+0xb0>)
 8000110:	2101      	movs	r1, #1
 8000112:	0018      	movs	r0, r3
 8000114:	f000 f890 	bl	8000238 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000118:	2390      	movs	r3, #144	; 0x90
 800011a:	05db      	lsls	r3, r3, #23
 800011c:	2101      	movs	r1, #1
 800011e:	0018      	movs	r0, r3
 8000120:	f000 f88a 	bl	8000238 <GPIO_PeriClockControl>

	GPIO_Handle_t GpioLedPC8;
	GPIO_Handle_t GpioLedPC9;
	GPIO_Handle_t GpioButtPA0;

	GpioLedPC8.pGPIOx = GPIOC;
 8000124:	211c      	movs	r1, #28
 8000126:	187b      	adds	r3, r7, r1
 8000128:	4a23      	ldr	r2, [pc, #140]	; (80001b8 <main+0xb0>)
 800012a:	601a      	str	r2, [r3, #0]
	GpioLedPC8.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_8;
 800012c:	187b      	adds	r3, r7, r1
 800012e:	2208      	movs	r2, #8
 8000130:	711a      	strb	r2, [r3, #4]
	GpioLedPC8.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000132:	187b      	adds	r3, r7, r1
 8000134:	2201      	movs	r2, #1
 8000136:	715a      	strb	r2, [r3, #5]
	GpioLedPC8.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000138:	187b      	adds	r3, r7, r1
 800013a:	2202      	movs	r2, #2
 800013c:	719a      	strb	r2, [r3, #6]
	GpioLedPC8.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800013e:	187b      	adds	r3, r7, r1
 8000140:	2200      	movs	r2, #0
 8000142:	721a      	strb	r2, [r3, #8]
	GpioLedPC8.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000144:	187b      	adds	r3, r7, r1
 8000146:	2200      	movs	r2, #0
 8000148:	71da      	strb	r2, [r3, #7]

	GPIO_Init(&GpioLedPC8);
 800014a:	187b      	adds	r3, r7, r1
 800014c:	0018      	movs	r0, r3
 800014e:	f000 f90b 	bl	8000368 <GPIO_Init>

	GpioLedPC9.pGPIOx = GPIOC;
 8000152:	2110      	movs	r1, #16
 8000154:	187b      	adds	r3, r7, r1
 8000156:	4a18      	ldr	r2, [pc, #96]	; (80001b8 <main+0xb0>)
 8000158:	601a      	str	r2, [r3, #0]
	GpioLedPC9.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_9;
 800015a:	187b      	adds	r3, r7, r1
 800015c:	2209      	movs	r2, #9
 800015e:	711a      	strb	r2, [r3, #4]
	GpioLedPC9.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000160:	187b      	adds	r3, r7, r1
 8000162:	2201      	movs	r2, #1
 8000164:	715a      	strb	r2, [r3, #5]
	GpioLedPC9.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000166:	187b      	adds	r3, r7, r1
 8000168:	2202      	movs	r2, #2
 800016a:	719a      	strb	r2, [r3, #6]
	GpioLedPC9.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800016c:	187b      	adds	r3, r7, r1
 800016e:	2200      	movs	r2, #0
 8000170:	721a      	strb	r2, [r3, #8]
	GpioLedPC9.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000172:	187b      	adds	r3, r7, r1
 8000174:	2200      	movs	r2, #0
 8000176:	71da      	strb	r2, [r3, #7]

	GPIO_Init(&GpioLedPC9);
 8000178:	187b      	adds	r3, r7, r1
 800017a:	0018      	movs	r0, r3
 800017c:	f000 f8f4 	bl	8000368 <GPIO_Init>

	GpioButtPA0.pGPIOx = GPIOA;
 8000180:	1d3b      	adds	r3, r7, #4
 8000182:	2290      	movs	r2, #144	; 0x90
 8000184:	05d2      	lsls	r2, r2, #23
 8000186:	601a      	str	r2, [r3, #0]
	GpioButtPA0.GPIO_PinConfig.GPIO_PinNumber - GPIO_PIN_NO_2;
	GpioButtPA0.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RFT;
 8000188:	1d3b      	adds	r3, r7, #4
 800018a:	2206      	movs	r2, #6
 800018c:	715a      	strb	r2, [r3, #5]
	GpioButtPA0.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800018e:	1d3b      	adds	r3, r7, #4
 8000190:	2202      	movs	r2, #2
 8000192:	719a      	strb	r2, [r3, #6]
	GpioButtPA0.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000194:	1d3b      	adds	r3, r7, #4
 8000196:	2200      	movs	r2, #0
 8000198:	71da      	strb	r2, [r3, #7]

	GPIO_Init(&GpioButtPA0);
 800019a:	1d3b      	adds	r3, r7, #4
 800019c:	0018      	movs	r0, r3
 800019e:	f000 f8e3 	bl	8000368 <GPIO_Init>


	GPIO_IRQInterruptConfig(IRQ_NO_EXTI2_3, ENABLE);
 80001a2:	2101      	movs	r1, #1
 80001a4:	2006      	movs	r0, #6
 80001a6:	f000 fa5d 	bl	8000664 <GPIO_IRQInterruptConfig>

	GPIO_WriteToOutputPin(GPIOC, GPIO_PIN_NO_8, SET);
 80001aa:	4b03      	ldr	r3, [pc, #12]	; (80001b8 <main+0xb0>)
 80001ac:	2201      	movs	r2, #1
 80001ae:	2108      	movs	r1, #8
 80001b0:	0018      	movs	r0, r3
 80001b2:	f000 fa17 	bl	80005e4 <GPIO_WriteToOutputPin>

	while(1);
 80001b6:	e7fe      	b.n	80001b6 <main+0xae>
 80001b8:	48000800 	.word	0x48000800

080001bc <EXTI2_3_IRQHandler>:
    return 0;
}

void EXTI2_3_IRQHandler(void){
 80001bc:	b580      	push	{r7, lr}
 80001be:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_2);
 80001c0:	2002      	movs	r0, #2
 80001c2:	f000 fab3 	bl	800072c <GPIO_IRQHandling>
	GPIO_TogglePin(GPIOC, GPIO_PIN_NO_8);
 80001c6:	4b06      	ldr	r3, [pc, #24]	; (80001e0 <EXTI2_3_IRQHandler+0x24>)
 80001c8:	2108      	movs	r1, #8
 80001ca:	0018      	movs	r0, r3
 80001cc:	f000 fa34 	bl	8000638 <GPIO_TogglePin>
	GPIO_TogglePin(GPIOC, GPIO_PIN_NO_9);
 80001d0:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <EXTI2_3_IRQHandler+0x24>)
 80001d2:	2109      	movs	r1, #9
 80001d4:	0018      	movs	r0, r3
 80001d6:	f000 fa2f 	bl	8000638 <GPIO_TogglePin>

}
 80001da:	46c0      	nop			; (mov r8, r8)
 80001dc:	46bd      	mov	sp, r7
 80001de:	bd80      	pop	{r7, pc}
 80001e0:	48000800 	.word	0x48000800

080001e4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001e4:	480d      	ldr	r0, [pc, #52]	; (800021c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001e6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001e8:	e000      	b.n	80001ec <Reset_Handler+0x8>
 80001ea:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001ec:	480c      	ldr	r0, [pc, #48]	; (8000220 <LoopForever+0x6>)
  ldr r1, =_edata
 80001ee:	490d      	ldr	r1, [pc, #52]	; (8000224 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001f0:	4a0d      	ldr	r2, [pc, #52]	; (8000228 <LoopForever+0xe>)
  movs r3, #0
 80001f2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001f4:	e002      	b.n	80001fc <LoopCopyDataInit>

080001f6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001f6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001f8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001fa:	3304      	adds	r3, #4

080001fc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001fc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001fe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000200:	d3f9      	bcc.n	80001f6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000202:	4a0a      	ldr	r2, [pc, #40]	; (800022c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000204:	4c0a      	ldr	r4, [pc, #40]	; (8000230 <LoopForever+0x16>)
  movs r3, #0
 8000206:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000208:	e001      	b.n	800020e <LoopFillZerobss>

0800020a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800020a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800020c:	3204      	adds	r2, #4

0800020e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800020e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000210:	d3fb      	bcc.n	800020a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000212:	f000 faab 	bl	800076c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000216:	f7ff ff77 	bl	8000108 <main>

0800021a <LoopForever>:

LoopForever:
  b LoopForever
 800021a:	e7fe      	b.n	800021a <LoopForever>
  ldr   r0, =_estack
 800021c:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8000220:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000224:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000228:	080007d4 	.word	0x080007d4
  ldr r2, =_sbss
 800022c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000230:	2000001c 	.word	0x2000001c

08000234 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000234:	e7fe      	b.n	8000234 <ADC_IRQHandler>
	...

08000238 <GPIO_PeriClockControl>:
 * description of parameters
 * what return
 * Note
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 8000238:	b580      	push	{r7, lr}
 800023a:	b082      	sub	sp, #8
 800023c:	af00      	add	r7, sp, #0
 800023e:	6078      	str	r0, [r7, #4]
 8000240:	000a      	movs	r2, r1
 8000242:	1cfb      	adds	r3, r7, #3
 8000244:	701a      	strb	r2, [r3, #0]
	 if ( EnorDi == ENABLE){
 8000246:	1cfb      	adds	r3, r7, #3
 8000248:	781b      	ldrb	r3, [r3, #0]
 800024a:	2b01      	cmp	r3, #1
 800024c:	d13c      	bne.n	80002c8 <GPIO_PeriClockControl+0x90>
		 if (pGPIOx == GPIOA){
 800024e:	687a      	ldr	r2, [r7, #4]
 8000250:	2390      	movs	r3, #144	; 0x90
 8000252:	05db      	lsls	r3, r3, #23
 8000254:	429a      	cmp	r2, r3
 8000256:	d107      	bne.n	8000268 <GPIO_PeriClockControl+0x30>
			 GPIOA_PCLK_EN();
 8000258:	4b39      	ldr	r3, [pc, #228]	; (8000340 <GPIO_PeriClockControl+0x108>)
 800025a:	695a      	ldr	r2, [r3, #20]
 800025c:	4b38      	ldr	r3, [pc, #224]	; (8000340 <GPIO_PeriClockControl+0x108>)
 800025e:	2180      	movs	r1, #128	; 0x80
 8000260:	0289      	lsls	r1, r1, #10
 8000262:	430a      	orrs	r2, r1
 8000264:	615a      	str	r2, [r3, #20]
		 }
		 else if (pGPIOx == GPIOF){
			 GPIOF_PCLK_DI();
		 }
	 }
}
 8000266:	e066      	b.n	8000336 <GPIO_PeriClockControl+0xfe>
		 else if (pGPIOx == GPIOB){
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a36      	ldr	r2, [pc, #216]	; (8000344 <GPIO_PeriClockControl+0x10c>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d107      	bne.n	8000280 <GPIO_PeriClockControl+0x48>
			 GPIOB_PCLK_EN();
 8000270:	4b33      	ldr	r3, [pc, #204]	; (8000340 <GPIO_PeriClockControl+0x108>)
 8000272:	695a      	ldr	r2, [r3, #20]
 8000274:	4b32      	ldr	r3, [pc, #200]	; (8000340 <GPIO_PeriClockControl+0x108>)
 8000276:	2180      	movs	r1, #128	; 0x80
 8000278:	02c9      	lsls	r1, r1, #11
 800027a:	430a      	orrs	r2, r1
 800027c:	615a      	str	r2, [r3, #20]
}
 800027e:	e05a      	b.n	8000336 <GPIO_PeriClockControl+0xfe>
		 else if (pGPIOx == GPIOC){
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	4a31      	ldr	r2, [pc, #196]	; (8000348 <GPIO_PeriClockControl+0x110>)
 8000284:	4293      	cmp	r3, r2
 8000286:	d107      	bne.n	8000298 <GPIO_PeriClockControl+0x60>
			 GPIOC_PCLK_EN();
 8000288:	4b2d      	ldr	r3, [pc, #180]	; (8000340 <GPIO_PeriClockControl+0x108>)
 800028a:	695a      	ldr	r2, [r3, #20]
 800028c:	4b2c      	ldr	r3, [pc, #176]	; (8000340 <GPIO_PeriClockControl+0x108>)
 800028e:	2180      	movs	r1, #128	; 0x80
 8000290:	0309      	lsls	r1, r1, #12
 8000292:	430a      	orrs	r2, r1
 8000294:	615a      	str	r2, [r3, #20]
}
 8000296:	e04e      	b.n	8000336 <GPIO_PeriClockControl+0xfe>
		 else if (pGPIOx == GPIOD){
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	4a2c      	ldr	r2, [pc, #176]	; (800034c <GPIO_PeriClockControl+0x114>)
 800029c:	4293      	cmp	r3, r2
 800029e:	d107      	bne.n	80002b0 <GPIO_PeriClockControl+0x78>
			 GPIOD_PCLK_EN();
 80002a0:	4b27      	ldr	r3, [pc, #156]	; (8000340 <GPIO_PeriClockControl+0x108>)
 80002a2:	695a      	ldr	r2, [r3, #20]
 80002a4:	4b26      	ldr	r3, [pc, #152]	; (8000340 <GPIO_PeriClockControl+0x108>)
 80002a6:	2180      	movs	r1, #128	; 0x80
 80002a8:	0349      	lsls	r1, r1, #13
 80002aa:	430a      	orrs	r2, r1
 80002ac:	615a      	str	r2, [r3, #20]
}
 80002ae:	e042      	b.n	8000336 <GPIO_PeriClockControl+0xfe>
		 else if (pGPIOx == GPIOF){
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	4a27      	ldr	r2, [pc, #156]	; (8000350 <GPIO_PeriClockControl+0x118>)
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d13e      	bne.n	8000336 <GPIO_PeriClockControl+0xfe>
			 GPIOF_PCLK_EN();
 80002b8:	4b21      	ldr	r3, [pc, #132]	; (8000340 <GPIO_PeriClockControl+0x108>)
 80002ba:	695a      	ldr	r2, [r3, #20]
 80002bc:	4b20      	ldr	r3, [pc, #128]	; (8000340 <GPIO_PeriClockControl+0x108>)
 80002be:	2180      	movs	r1, #128	; 0x80
 80002c0:	03c9      	lsls	r1, r1, #15
 80002c2:	430a      	orrs	r2, r1
 80002c4:	615a      	str	r2, [r3, #20]
}
 80002c6:	e036      	b.n	8000336 <GPIO_PeriClockControl+0xfe>
		 if (pGPIOx == GPIOA){
 80002c8:	687a      	ldr	r2, [r7, #4]
 80002ca:	2390      	movs	r3, #144	; 0x90
 80002cc:	05db      	lsls	r3, r3, #23
 80002ce:	429a      	cmp	r2, r3
 80002d0:	d106      	bne.n	80002e0 <GPIO_PeriClockControl+0xa8>
			 GPIOA_PCLK_DI();
 80002d2:	4b1b      	ldr	r3, [pc, #108]	; (8000340 <GPIO_PeriClockControl+0x108>)
 80002d4:	695a      	ldr	r2, [r3, #20]
 80002d6:	4b1a      	ldr	r3, [pc, #104]	; (8000340 <GPIO_PeriClockControl+0x108>)
 80002d8:	491e      	ldr	r1, [pc, #120]	; (8000354 <GPIO_PeriClockControl+0x11c>)
 80002da:	400a      	ands	r2, r1
 80002dc:	615a      	str	r2, [r3, #20]
}
 80002de:	e02a      	b.n	8000336 <GPIO_PeriClockControl+0xfe>
		 else if (pGPIOx == GPIOB){
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	4a18      	ldr	r2, [pc, #96]	; (8000344 <GPIO_PeriClockControl+0x10c>)
 80002e4:	4293      	cmp	r3, r2
 80002e6:	d106      	bne.n	80002f6 <GPIO_PeriClockControl+0xbe>
			 GPIOB_PCLK_DI();
 80002e8:	4b15      	ldr	r3, [pc, #84]	; (8000340 <GPIO_PeriClockControl+0x108>)
 80002ea:	695a      	ldr	r2, [r3, #20]
 80002ec:	4b14      	ldr	r3, [pc, #80]	; (8000340 <GPIO_PeriClockControl+0x108>)
 80002ee:	491a      	ldr	r1, [pc, #104]	; (8000358 <GPIO_PeriClockControl+0x120>)
 80002f0:	400a      	ands	r2, r1
 80002f2:	615a      	str	r2, [r3, #20]
}
 80002f4:	e01f      	b.n	8000336 <GPIO_PeriClockControl+0xfe>
		 else if (pGPIOx == GPIOC){
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a13      	ldr	r2, [pc, #76]	; (8000348 <GPIO_PeriClockControl+0x110>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d106      	bne.n	800030c <GPIO_PeriClockControl+0xd4>
			 GPIOC_PCLK_DI();
 80002fe:	4b10      	ldr	r3, [pc, #64]	; (8000340 <GPIO_PeriClockControl+0x108>)
 8000300:	695a      	ldr	r2, [r3, #20]
 8000302:	4b0f      	ldr	r3, [pc, #60]	; (8000340 <GPIO_PeriClockControl+0x108>)
 8000304:	4915      	ldr	r1, [pc, #84]	; (800035c <GPIO_PeriClockControl+0x124>)
 8000306:	400a      	ands	r2, r1
 8000308:	615a      	str	r2, [r3, #20]
}
 800030a:	e014      	b.n	8000336 <GPIO_PeriClockControl+0xfe>
		 else if (pGPIOx == GPIOD){
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	4a0f      	ldr	r2, [pc, #60]	; (800034c <GPIO_PeriClockControl+0x114>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d106      	bne.n	8000322 <GPIO_PeriClockControl+0xea>
			 GPIOD_PCLK_DI();
 8000314:	4b0a      	ldr	r3, [pc, #40]	; (8000340 <GPIO_PeriClockControl+0x108>)
 8000316:	695a      	ldr	r2, [r3, #20]
 8000318:	4b09      	ldr	r3, [pc, #36]	; (8000340 <GPIO_PeriClockControl+0x108>)
 800031a:	4911      	ldr	r1, [pc, #68]	; (8000360 <GPIO_PeriClockControl+0x128>)
 800031c:	400a      	ands	r2, r1
 800031e:	615a      	str	r2, [r3, #20]
}
 8000320:	e009      	b.n	8000336 <GPIO_PeriClockControl+0xfe>
		 else if (pGPIOx == GPIOF){
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	4a0a      	ldr	r2, [pc, #40]	; (8000350 <GPIO_PeriClockControl+0x118>)
 8000326:	4293      	cmp	r3, r2
 8000328:	d105      	bne.n	8000336 <GPIO_PeriClockControl+0xfe>
			 GPIOF_PCLK_DI();
 800032a:	4b05      	ldr	r3, [pc, #20]	; (8000340 <GPIO_PeriClockControl+0x108>)
 800032c:	695a      	ldr	r2, [r3, #20]
 800032e:	4b04      	ldr	r3, [pc, #16]	; (8000340 <GPIO_PeriClockControl+0x108>)
 8000330:	490c      	ldr	r1, [pc, #48]	; (8000364 <GPIO_PeriClockControl+0x12c>)
 8000332:	400a      	ands	r2, r1
 8000334:	615a      	str	r2, [r3, #20]
}
 8000336:	46c0      	nop			; (mov r8, r8)
 8000338:	46bd      	mov	sp, r7
 800033a:	b002      	add	sp, #8
 800033c:	bd80      	pop	{r7, pc}
 800033e:	46c0      	nop			; (mov r8, r8)
 8000340:	40021000 	.word	0x40021000
 8000344:	48000400 	.word	0x48000400
 8000348:	48000800 	.word	0x48000800
 800034c:	48000c00 	.word	0x48000c00
 8000350:	48001400 	.word	0x48001400
 8000354:	fffdffff 	.word	0xfffdffff
 8000358:	fffbffff 	.word	0xfffbffff
 800035c:	fff7ffff 	.word	0xfff7ffff
 8000360:	ffefffff 	.word	0xffefffff
 8000364:	ffbfffff 	.word	0xffbfffff

08000368 <GPIO_Init>:

void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000368:	b580      	push	{r7, lr}
 800036a:	b086      	sub	sp, #24
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0;
 8000370:	2300      	movs	r3, #0
 8000372:	613b      	str	r3, [r7, #16]

	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	795b      	ldrb	r3, [r3, #5]
 8000378:	2b03      	cmp	r3, #3
 800037a:	d811      	bhi.n	80003a0 <GPIO_Init+0x38>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	795b      	ldrb	r3, [r3, #5]
 8000380:	001a      	movs	r2, r3
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	791b      	ldrb	r3, [r3, #4]
 8000386:	005b      	lsls	r3, r3, #1
 8000388:	409a      	lsls	r2, r3
 800038a:	0013      	movs	r3, r2
 800038c:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->MODER |= temp;
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	6819      	ldr	r1, [r3, #0]
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	693a      	ldr	r2, [r7, #16]
 800039a:	430a      	orrs	r2, r1
 800039c:	601a      	str	r2, [r3, #0]
 800039e:	e0a7      	b.n	80004f0 <GPIO_Init+0x188>
	}
	else{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	795b      	ldrb	r3, [r3, #5]
 80003a4:	2b04      	cmp	r3, #4
 80003a6:	d117      	bne.n	80003d8 <GPIO_Init+0x70>
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003a8:	4b87      	ldr	r3, [pc, #540]	; (80005c8 <GPIO_Init+0x260>)
 80003aa:	68da      	ldr	r2, [r3, #12]
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	791b      	ldrb	r3, [r3, #4]
 80003b0:	0019      	movs	r1, r3
 80003b2:	2301      	movs	r3, #1
 80003b4:	408b      	lsls	r3, r1
 80003b6:	0019      	movs	r1, r3
 80003b8:	4b83      	ldr	r3, [pc, #524]	; (80005c8 <GPIO_Init+0x260>)
 80003ba:	430a      	orrs	r2, r1
 80003bc:	60da      	str	r2, [r3, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003be:	4b82      	ldr	r3, [pc, #520]	; (80005c8 <GPIO_Init+0x260>)
 80003c0:	689a      	ldr	r2, [r3, #8]
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	791b      	ldrb	r3, [r3, #4]
 80003c6:	0019      	movs	r1, r3
 80003c8:	2301      	movs	r3, #1
 80003ca:	408b      	lsls	r3, r1
 80003cc:	43db      	mvns	r3, r3
 80003ce:	0019      	movs	r1, r3
 80003d0:	4b7d      	ldr	r3, [pc, #500]	; (80005c8 <GPIO_Init+0x260>)
 80003d2:	400a      	ands	r2, r1
 80003d4:	609a      	str	r2, [r3, #8]
 80003d6:	e035      	b.n	8000444 <GPIO_Init+0xdc>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	795b      	ldrb	r3, [r3, #5]
 80003dc:	2b05      	cmp	r3, #5
 80003de:	d117      	bne.n	8000410 <GPIO_Init+0xa8>
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003e0:	4b79      	ldr	r3, [pc, #484]	; (80005c8 <GPIO_Init+0x260>)
 80003e2:	689a      	ldr	r2, [r3, #8]
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	791b      	ldrb	r3, [r3, #4]
 80003e8:	0019      	movs	r1, r3
 80003ea:	2301      	movs	r3, #1
 80003ec:	408b      	lsls	r3, r1
 80003ee:	0019      	movs	r1, r3
 80003f0:	4b75      	ldr	r3, [pc, #468]	; (80005c8 <GPIO_Init+0x260>)
 80003f2:	430a      	orrs	r2, r1
 80003f4:	609a      	str	r2, [r3, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003f6:	4b74      	ldr	r3, [pc, #464]	; (80005c8 <GPIO_Init+0x260>)
 80003f8:	68da      	ldr	r2, [r3, #12]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	791b      	ldrb	r3, [r3, #4]
 80003fe:	0019      	movs	r1, r3
 8000400:	2301      	movs	r3, #1
 8000402:	408b      	lsls	r3, r1
 8000404:	43db      	mvns	r3, r3
 8000406:	0019      	movs	r1, r3
 8000408:	4b6f      	ldr	r3, [pc, #444]	; (80005c8 <GPIO_Init+0x260>)
 800040a:	400a      	ands	r2, r1
 800040c:	60da      	str	r2, [r3, #12]
 800040e:	e019      	b.n	8000444 <GPIO_Init+0xdc>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	795b      	ldrb	r3, [r3, #5]
 8000414:	2b06      	cmp	r3, #6
 8000416:	d115      	bne.n	8000444 <GPIO_Init+0xdc>
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000418:	4b6b      	ldr	r3, [pc, #428]	; (80005c8 <GPIO_Init+0x260>)
 800041a:	68da      	ldr	r2, [r3, #12]
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	791b      	ldrb	r3, [r3, #4]
 8000420:	0019      	movs	r1, r3
 8000422:	2301      	movs	r3, #1
 8000424:	408b      	lsls	r3, r1
 8000426:	0019      	movs	r1, r3
 8000428:	4b67      	ldr	r3, [pc, #412]	; (80005c8 <GPIO_Init+0x260>)
 800042a:	430a      	orrs	r2, r1
 800042c:	60da      	str	r2, [r3, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800042e:	4b66      	ldr	r3, [pc, #408]	; (80005c8 <GPIO_Init+0x260>)
 8000430:	689a      	ldr	r2, [r3, #8]
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	791b      	ldrb	r3, [r3, #4]
 8000436:	0019      	movs	r1, r3
 8000438:	2301      	movs	r3, #1
 800043a:	408b      	lsls	r3, r1
 800043c:	0019      	movs	r1, r3
 800043e:	4b62      	ldr	r3, [pc, #392]	; (80005c8 <GPIO_Init+0x260>)
 8000440:	430a      	orrs	r2, r1
 8000442:	609a      	str	r2, [r3, #8]
		}
		// 2. Configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	791a      	ldrb	r2, [r3, #4]
 8000448:	230f      	movs	r3, #15
 800044a:	18fb      	adds	r3, r7, r3
 800044c:	0892      	lsrs	r2, r2, #2
 800044e:	701a      	strb	r2, [r3, #0]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	791a      	ldrb	r2, [r3, #4]
 8000454:	230e      	movs	r3, #14
 8000456:	18fb      	adds	r3, r7, r3
 8000458:	2103      	movs	r1, #3
 800045a:	400a      	ands	r2, r1
 800045c:	701a      	strb	r2, [r3, #0]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	681a      	ldr	r2, [r3, #0]
 8000462:	2390      	movs	r3, #144	; 0x90
 8000464:	05db      	lsls	r3, r3, #23
 8000466:	429a      	cmp	r2, r3
 8000468:	d01d      	beq.n	80004a6 <GPIO_Init+0x13e>
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	4a57      	ldr	r2, [pc, #348]	; (80005cc <GPIO_Init+0x264>)
 8000470:	4293      	cmp	r3, r2
 8000472:	d016      	beq.n	80004a2 <GPIO_Init+0x13a>
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	4a55      	ldr	r2, [pc, #340]	; (80005d0 <GPIO_Init+0x268>)
 800047a:	4293      	cmp	r3, r2
 800047c:	d00f      	beq.n	800049e <GPIO_Init+0x136>
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	4a54      	ldr	r2, [pc, #336]	; (80005d4 <GPIO_Init+0x26c>)
 8000484:	4293      	cmp	r3, r2
 8000486:	d008      	beq.n	800049a <GPIO_Init+0x132>
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	4a52      	ldr	r2, [pc, #328]	; (80005d8 <GPIO_Init+0x270>)
 800048e:	4293      	cmp	r3, r2
 8000490:	d101      	bne.n	8000496 <GPIO_Init+0x12e>
 8000492:	2304      	movs	r3, #4
 8000494:	e008      	b.n	80004a8 <GPIO_Init+0x140>
 8000496:	2300      	movs	r3, #0
 8000498:	e006      	b.n	80004a8 <GPIO_Init+0x140>
 800049a:	2303      	movs	r3, #3
 800049c:	e004      	b.n	80004a8 <GPIO_Init+0x140>
 800049e:	2302      	movs	r3, #2
 80004a0:	e002      	b.n	80004a8 <GPIO_Init+0x140>
 80004a2:	2301      	movs	r3, #1
 80004a4:	e000      	b.n	80004a8 <GPIO_Init+0x140>
 80004a6:	2300      	movs	r3, #0
 80004a8:	200d      	movs	r0, #13
 80004aa:	183a      	adds	r2, r7, r0
 80004ac:	7013      	strb	r3, [r2, #0]
		SYSCGF_EN();
 80004ae:	4b4b      	ldr	r3, [pc, #300]	; (80005dc <GPIO_Init+0x274>)
 80004b0:	699a      	ldr	r2, [r3, #24]
 80004b2:	4b4a      	ldr	r3, [pc, #296]	; (80005dc <GPIO_Init+0x274>)
 80004b4:	2101      	movs	r1, #1
 80004b6:	430a      	orrs	r2, r1
 80004b8:	619a      	str	r2, [r3, #24]
		SYSCFG->SYSCFG_EXTICR[temp1] = portcode << (temp2 * 4);
 80004ba:	183b      	adds	r3, r7, r0
 80004bc:	781a      	ldrb	r2, [r3, #0]
 80004be:	230e      	movs	r3, #14
 80004c0:	18fb      	adds	r3, r7, r3
 80004c2:	781b      	ldrb	r3, [r3, #0]
 80004c4:	009b      	lsls	r3, r3, #2
 80004c6:	409a      	lsls	r2, r3
 80004c8:	0011      	movs	r1, r2
 80004ca:	4a45      	ldr	r2, [pc, #276]	; (80005e0 <GPIO_Init+0x278>)
 80004cc:	230f      	movs	r3, #15
 80004ce:	18fb      	adds	r3, r7, r3
 80004d0:	781b      	ldrb	r3, [r3, #0]
 80004d2:	009b      	lsls	r3, r3, #2
 80004d4:	18d3      	adds	r3, r2, r3
 80004d6:	3304      	adds	r3, #4
 80004d8:	6019      	str	r1, [r3, #0]
		// 3. enable the exti interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004da:	4b3b      	ldr	r3, [pc, #236]	; (80005c8 <GPIO_Init+0x260>)
 80004dc:	681a      	ldr	r2, [r3, #0]
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	791b      	ldrb	r3, [r3, #4]
 80004e2:	0019      	movs	r1, r3
 80004e4:	2301      	movs	r3, #1
 80004e6:	408b      	lsls	r3, r1
 80004e8:	0019      	movs	r1, r3
 80004ea:	4b37      	ldr	r3, [pc, #220]	; (80005c8 <GPIO_Init+0x260>)
 80004ec:	430a      	orrs	r2, r1
 80004ee:	601a      	str	r2, [r3, #0]
	}
	temp = 0;
 80004f0:	2300      	movs	r3, #0
 80004f2:	613b      	str	r3, [r7, #16]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	799b      	ldrb	r3, [r3, #6]
 80004f8:	001a      	movs	r2, r3
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	791b      	ldrb	r3, [r3, #4]
 80004fe:	005b      	lsls	r3, r3, #1
 8000500:	409a      	lsls	r2, r3
 8000502:	0013      	movs	r3, r2
 8000504:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	6899      	ldr	r1, [r3, #8]
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	693a      	ldr	r2, [r7, #16]
 8000512:	430a      	orrs	r2, r1
 8000514:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000516:	2300      	movs	r3, #0
 8000518:	613b      	str	r3, [r7, #16]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	79db      	ldrb	r3, [r3, #7]
 800051e:	001a      	movs	r2, r3
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	791b      	ldrb	r3, [r3, #4]
 8000524:	005b      	lsls	r3, r3, #1
 8000526:	409a      	lsls	r2, r3
 8000528:	0013      	movs	r3, r2
 800052a:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	68d9      	ldr	r1, [r3, #12]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	693a      	ldr	r2, [r7, #16]
 8000538:	430a      	orrs	r2, r1
 800053a:	60da      	str	r2, [r3, #12]

	temp = 0;
 800053c:	2300      	movs	r3, #0
 800053e:	613b      	str	r3, [r7, #16]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	7a1b      	ldrb	r3, [r3, #8]
 8000544:	001a      	movs	r2, r3
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	791b      	ldrb	r3, [r3, #4]
 800054a:	409a      	lsls	r2, r3
 800054c:	0013      	movs	r3, r2
 800054e:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	6859      	ldr	r1, [r3, #4]
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	693a      	ldr	r2, [r7, #16]
 800055c:	430a      	orrs	r2, r1
 800055e:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000560:	2300      	movs	r3, #0
 8000562:	613b      	str	r3, [r7, #16]
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	795b      	ldrb	r3, [r3, #5]
 8000568:	2b02      	cmp	r3, #2
 800056a:	d128      	bne.n	80005be <GPIO_Init+0x256>
		uint32_t pinOffset = 0;
 800056c:	2300      	movs	r3, #0
 800056e:	617b      	str	r3, [r7, #20]
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber > 7){
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	791b      	ldrb	r3, [r3, #4]
 8000574:	2b07      	cmp	r3, #7
 8000576:	d903      	bls.n	8000580 <GPIO_Init+0x218>
			pinOffset = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 7;
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	791b      	ldrb	r3, [r3, #4]
 800057c:	3b07      	subs	r3, #7
 800057e:	617b      	str	r3, [r7, #20]
		}
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (4 * pinOffset));
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	795b      	ldrb	r3, [r3, #5]
 8000584:	001a      	movs	r2, r3
 8000586:	697b      	ldr	r3, [r7, #20]
 8000588:	009b      	lsls	r3, r3, #2
 800058a:	409a      	lsls	r2, r3
 800058c:	0013      	movs	r3, r2
 800058e:	613b      	str	r3, [r7, #16]
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber < 8){
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	791b      	ldrb	r3, [r3, #4]
 8000594:	2b07      	cmp	r3, #7
 8000596:	d808      	bhi.n	80005aa <GPIO_Init+0x242>
			pGPIOHandle->pGPIOx->AFRL |= temp;
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	6a19      	ldr	r1, [r3, #32]
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	693a      	ldr	r2, [r7, #16]
 80005a4:	430a      	orrs	r2, r1
 80005a6:	621a      	str	r2, [r3, #32]
 80005a8:	e007      	b.n	80005ba <GPIO_Init+0x252>
		}
		else{
			pGPIOHandle->pGPIOx->AFRH |= temp;
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	681b      	ldr	r3, [r3, #0]
 80005b4:	693a      	ldr	r2, [r7, #16]
 80005b6:	430a      	orrs	r2, r1
 80005b8:	625a      	str	r2, [r3, #36]	; 0x24
		}
		pinOffset = 0;
 80005ba:	2300      	movs	r3, #0
 80005bc:	617b      	str	r3, [r7, #20]
	}
}
 80005be:	46c0      	nop			; (mov r8, r8)
 80005c0:	46bd      	mov	sp, r7
 80005c2:	b006      	add	sp, #24
 80005c4:	bd80      	pop	{r7, pc}
 80005c6:	46c0      	nop			; (mov r8, r8)
 80005c8:	40010400 	.word	0x40010400
 80005cc:	48000400 	.word	0x48000400
 80005d0:	48000800 	.word	0x48000800
 80005d4:	48000c00 	.word	0x48000c00
 80005d8:	48001400 	.word	0x48001400
 80005dc:	40021000 	.word	0x40021000
 80005e0:	40010000 	.word	0x40010000

080005e4 <GPIO_WriteToOutputPin>:
	uint16_t value;
	value = (uint16_t)(GPIOx->IDR);
	return value;
}

void GPIO_WriteToOutputPin(GPIO_RegDef_t *GPIOx, uint8_t PinNumber, uint8_t value){
 80005e4:	b580      	push	{r7, lr}
 80005e6:	b082      	sub	sp, #8
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	6078      	str	r0, [r7, #4]
 80005ec:	0008      	movs	r0, r1
 80005ee:	0011      	movs	r1, r2
 80005f0:	1cfb      	adds	r3, r7, #3
 80005f2:	1c02      	adds	r2, r0, #0
 80005f4:	701a      	strb	r2, [r3, #0]
 80005f6:	1cbb      	adds	r3, r7, #2
 80005f8:	1c0a      	adds	r2, r1, #0
 80005fa:	701a      	strb	r2, [r3, #0]
	if (value == GPIO_PIN_SET){
 80005fc:	1cbb      	adds	r3, r7, #2
 80005fe:	781b      	ldrb	r3, [r3, #0]
 8000600:	2b01      	cmp	r3, #1
 8000602:	d10a      	bne.n	800061a <GPIO_WriteToOutputPin+0x36>
		GPIOx->ODR |= (1 << PinNumber);
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	695b      	ldr	r3, [r3, #20]
 8000608:	1cfa      	adds	r2, r7, #3
 800060a:	7812      	ldrb	r2, [r2, #0]
 800060c:	2101      	movs	r1, #1
 800060e:	4091      	lsls	r1, r2
 8000610:	000a      	movs	r2, r1
 8000612:	431a      	orrs	r2, r3
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	615a      	str	r2, [r3, #20]
	}
	else{
		GPIOx->ODR &= ~(1 << PinNumber);
	}
}
 8000618:	e00a      	b.n	8000630 <GPIO_WriteToOutputPin+0x4c>
		GPIOx->ODR &= ~(1 << PinNumber);
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	695b      	ldr	r3, [r3, #20]
 800061e:	1cfa      	adds	r2, r7, #3
 8000620:	7812      	ldrb	r2, [r2, #0]
 8000622:	2101      	movs	r1, #1
 8000624:	4091      	lsls	r1, r2
 8000626:	000a      	movs	r2, r1
 8000628:	43d2      	mvns	r2, r2
 800062a:	401a      	ands	r2, r3
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	615a      	str	r2, [r3, #20]
}
 8000630:	46c0      	nop			; (mov r8, r8)
 8000632:	46bd      	mov	sp, r7
 8000634:	b002      	add	sp, #8
 8000636:	bd80      	pop	{r7, pc}

08000638 <GPIO_TogglePin>:

void GPIO_WriteToOutpuPort(GPIO_RegDef_t *GPIOx, uint16_t Value){
	GPIOx->ODR = Value;
}

void GPIO_TogglePin(GPIO_RegDef_t *GPIOx, uint8_t PinNumber){
 8000638:	b580      	push	{r7, lr}
 800063a:	b082      	sub	sp, #8
 800063c:	af00      	add	r7, sp, #0
 800063e:	6078      	str	r0, [r7, #4]
 8000640:	000a      	movs	r2, r1
 8000642:	1cfb      	adds	r3, r7, #3
 8000644:	701a      	strb	r2, [r3, #0]
	GPIOx->ODR ^= (1 << PinNumber);
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	695b      	ldr	r3, [r3, #20]
 800064a:	1cfa      	adds	r2, r7, #3
 800064c:	7812      	ldrb	r2, [r2, #0]
 800064e:	2101      	movs	r1, #1
 8000650:	4091      	lsls	r1, r2
 8000652:	000a      	movs	r2, r1
 8000654:	405a      	eors	r2, r3
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	615a      	str	r2, [r3, #20]
}
 800065a:	46c0      	nop			; (mov r8, r8)
 800065c:	46bd      	mov	sp, r7
 800065e:	b002      	add	sp, #8
 8000660:	bd80      	pop	{r7, pc}
	...

08000664 <GPIO_IRQInterruptConfig>:


void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi){
 8000664:	b580      	push	{r7, lr}
 8000666:	b082      	sub	sp, #8
 8000668:	af00      	add	r7, sp, #0
 800066a:	0002      	movs	r2, r0
 800066c:	1dfb      	adds	r3, r7, #7
 800066e:	701a      	strb	r2, [r3, #0]
 8000670:	1dbb      	adds	r3, r7, #6
 8000672:	1c0a      	adds	r2, r1, #0
 8000674:	701a      	strb	r2, [r3, #0]
	if (EnorDi == ENABLE){
 8000676:	1dbb      	adds	r3, r7, #6
 8000678:	781b      	ldrb	r3, [r3, #0]
 800067a:	2b01      	cmp	r3, #1
 800067c:	d125      	bne.n	80006ca <GPIO_IRQInterruptConfig+0x66>
		if (IRQNumber < 32){
 800067e:	1dfb      	adds	r3, r7, #7
 8000680:	781b      	ldrb	r3, [r3, #0]
 8000682:	2b1f      	cmp	r3, #31
 8000684:	d80b      	bhi.n	800069e <GPIO_IRQInterruptConfig+0x3a>
			*NVIC_ISER0 |= (1 << IRQNumber);
 8000686:	4b25      	ldr	r3, [pc, #148]	; (800071c <GPIO_IRQInterruptConfig+0xb8>)
 8000688:	681a      	ldr	r2, [r3, #0]
 800068a:	1dfb      	adds	r3, r7, #7
 800068c:	781b      	ldrb	r3, [r3, #0]
 800068e:	2101      	movs	r1, #1
 8000690:	4099      	lsls	r1, r3
 8000692:	000b      	movs	r3, r1
 8000694:	0019      	movs	r1, r3
 8000696:	4b21      	ldr	r3, [pc, #132]	; (800071c <GPIO_IRQInterruptConfig+0xb8>)
 8000698:	430a      	orrs	r2, r1
 800069a:	601a      	str	r2, [r3, #0]
		}
		else if (IRQNumber >= 32 && IRQNumber < 64){
			*NVIC_ICER1 |= (1<< (IRQNumber % 32));
		}
	}
}
 800069c:	e03a      	b.n	8000714 <GPIO_IRQInterruptConfig+0xb0>
		else if (IRQNumber >= 32 && IRQNumber < 64){
 800069e:	1dfb      	adds	r3, r7, #7
 80006a0:	781b      	ldrb	r3, [r3, #0]
 80006a2:	2b1f      	cmp	r3, #31
 80006a4:	d936      	bls.n	8000714 <GPIO_IRQInterruptConfig+0xb0>
 80006a6:	1dfb      	adds	r3, r7, #7
 80006a8:	781b      	ldrb	r3, [r3, #0]
 80006aa:	2b3f      	cmp	r3, #63	; 0x3f
 80006ac:	d832      	bhi.n	8000714 <GPIO_IRQInterruptConfig+0xb0>
			*NVIC_ISER1 |= (1<< (IRQNumber % 32));
 80006ae:	4b1c      	ldr	r3, [pc, #112]	; (8000720 <GPIO_IRQInterruptConfig+0xbc>)
 80006b0:	681a      	ldr	r2, [r3, #0]
 80006b2:	1dfb      	adds	r3, r7, #7
 80006b4:	781b      	ldrb	r3, [r3, #0]
 80006b6:	211f      	movs	r1, #31
 80006b8:	400b      	ands	r3, r1
 80006ba:	2101      	movs	r1, #1
 80006bc:	4099      	lsls	r1, r3
 80006be:	000b      	movs	r3, r1
 80006c0:	0019      	movs	r1, r3
 80006c2:	4b17      	ldr	r3, [pc, #92]	; (8000720 <GPIO_IRQInterruptConfig+0xbc>)
 80006c4:	430a      	orrs	r2, r1
 80006c6:	601a      	str	r2, [r3, #0]
}
 80006c8:	e024      	b.n	8000714 <GPIO_IRQInterruptConfig+0xb0>
		if (IRQNumber < 32){
 80006ca:	1dfb      	adds	r3, r7, #7
 80006cc:	781b      	ldrb	r3, [r3, #0]
 80006ce:	2b1f      	cmp	r3, #31
 80006d0:	d80b      	bhi.n	80006ea <GPIO_IRQInterruptConfig+0x86>
			*NVIC_ICER0 |= (1 << IRQNumber);
 80006d2:	4b14      	ldr	r3, [pc, #80]	; (8000724 <GPIO_IRQInterruptConfig+0xc0>)
 80006d4:	681a      	ldr	r2, [r3, #0]
 80006d6:	1dfb      	adds	r3, r7, #7
 80006d8:	781b      	ldrb	r3, [r3, #0]
 80006da:	2101      	movs	r1, #1
 80006dc:	4099      	lsls	r1, r3
 80006de:	000b      	movs	r3, r1
 80006e0:	0019      	movs	r1, r3
 80006e2:	4b10      	ldr	r3, [pc, #64]	; (8000724 <GPIO_IRQInterruptConfig+0xc0>)
 80006e4:	430a      	orrs	r2, r1
 80006e6:	601a      	str	r2, [r3, #0]
}
 80006e8:	e014      	b.n	8000714 <GPIO_IRQInterruptConfig+0xb0>
		else if (IRQNumber >= 32 && IRQNumber < 64){
 80006ea:	1dfb      	adds	r3, r7, #7
 80006ec:	781b      	ldrb	r3, [r3, #0]
 80006ee:	2b1f      	cmp	r3, #31
 80006f0:	d910      	bls.n	8000714 <GPIO_IRQInterruptConfig+0xb0>
 80006f2:	1dfb      	adds	r3, r7, #7
 80006f4:	781b      	ldrb	r3, [r3, #0]
 80006f6:	2b3f      	cmp	r3, #63	; 0x3f
 80006f8:	d80c      	bhi.n	8000714 <GPIO_IRQInterruptConfig+0xb0>
			*NVIC_ICER1 |= (1<< (IRQNumber % 32));
 80006fa:	4b0b      	ldr	r3, [pc, #44]	; (8000728 <GPIO_IRQInterruptConfig+0xc4>)
 80006fc:	681a      	ldr	r2, [r3, #0]
 80006fe:	1dfb      	adds	r3, r7, #7
 8000700:	781b      	ldrb	r3, [r3, #0]
 8000702:	211f      	movs	r1, #31
 8000704:	400b      	ands	r3, r1
 8000706:	2101      	movs	r1, #1
 8000708:	4099      	lsls	r1, r3
 800070a:	000b      	movs	r3, r1
 800070c:	0019      	movs	r1, r3
 800070e:	4b06      	ldr	r3, [pc, #24]	; (8000728 <GPIO_IRQInterruptConfig+0xc4>)
 8000710:	430a      	orrs	r2, r1
 8000712:	601a      	str	r2, [r3, #0]
}
 8000714:	46c0      	nop			; (mov r8, r8)
 8000716:	46bd      	mov	sp, r7
 8000718:	b002      	add	sp, #8
 800071a:	bd80      	pop	{r7, pc}
 800071c:	e000e100 	.word	0xe000e100
 8000720:	e000e104 	.word	0xe000e104
 8000724:	e000e180 	.word	0xe000e180
 8000728:	e000e184 	.word	0xe000e184

0800072c <GPIO_IRQHandling>:

	uint8_t shift_amount = ( 8 * iprx_sextion) + (8 - NO_PR_BITS_IMPLEMENTED);
	*(NVIC_PR_BASE_ADDR + IRQNumber) |= IRQPriority << shift_amount;

}
void GPIO_IRQHandling(uint8_t PinNumber){
 800072c:	b580      	push	{r7, lr}
 800072e:	b082      	sub	sp, #8
 8000730:	af00      	add	r7, sp, #0
 8000732:	0002      	movs	r2, r0
 8000734:	1dfb      	adds	r3, r7, #7
 8000736:	701a      	strb	r2, [r3, #0]
	 if(EXTI->PR & 1 << PinNumber){
 8000738:	4b0b      	ldr	r3, [pc, #44]	; (8000768 <GPIO_IRQHandling+0x3c>)
 800073a:	695b      	ldr	r3, [r3, #20]
 800073c:	1dfa      	adds	r2, r7, #7
 800073e:	7812      	ldrb	r2, [r2, #0]
 8000740:	2101      	movs	r1, #1
 8000742:	4091      	lsls	r1, r2
 8000744:	000a      	movs	r2, r1
 8000746:	4013      	ands	r3, r2
 8000748:	d00a      	beq.n	8000760 <GPIO_IRQHandling+0x34>
		 EXTI->PR |= ( 1 << PinNumber);
 800074a:	4b07      	ldr	r3, [pc, #28]	; (8000768 <GPIO_IRQHandling+0x3c>)
 800074c:	695a      	ldr	r2, [r3, #20]
 800074e:	1dfb      	adds	r3, r7, #7
 8000750:	781b      	ldrb	r3, [r3, #0]
 8000752:	2101      	movs	r1, #1
 8000754:	4099      	lsls	r1, r3
 8000756:	000b      	movs	r3, r1
 8000758:	0019      	movs	r1, r3
 800075a:	4b03      	ldr	r3, [pc, #12]	; (8000768 <GPIO_IRQHandling+0x3c>)
 800075c:	430a      	orrs	r2, r1
 800075e:	615a      	str	r2, [r3, #20]
	 }
}
 8000760:	46c0      	nop			; (mov r8, r8)
 8000762:	46bd      	mov	sp, r7
 8000764:	b002      	add	sp, #8
 8000766:	bd80      	pop	{r7, pc}
 8000768:	40010400 	.word	0x40010400

0800076c <__libc_init_array>:
 800076c:	b570      	push	{r4, r5, r6, lr}
 800076e:	2600      	movs	r6, #0
 8000770:	4c0c      	ldr	r4, [pc, #48]	; (80007a4 <__libc_init_array+0x38>)
 8000772:	4d0d      	ldr	r5, [pc, #52]	; (80007a8 <__libc_init_array+0x3c>)
 8000774:	1b64      	subs	r4, r4, r5
 8000776:	10a4      	asrs	r4, r4, #2
 8000778:	42a6      	cmp	r6, r4
 800077a:	d109      	bne.n	8000790 <__libc_init_array+0x24>
 800077c:	2600      	movs	r6, #0
 800077e:	f000 f819 	bl	80007b4 <_init>
 8000782:	4c0a      	ldr	r4, [pc, #40]	; (80007ac <__libc_init_array+0x40>)
 8000784:	4d0a      	ldr	r5, [pc, #40]	; (80007b0 <__libc_init_array+0x44>)
 8000786:	1b64      	subs	r4, r4, r5
 8000788:	10a4      	asrs	r4, r4, #2
 800078a:	42a6      	cmp	r6, r4
 800078c:	d105      	bne.n	800079a <__libc_init_array+0x2e>
 800078e:	bd70      	pop	{r4, r5, r6, pc}
 8000790:	00b3      	lsls	r3, r6, #2
 8000792:	58eb      	ldr	r3, [r5, r3]
 8000794:	4798      	blx	r3
 8000796:	3601      	adds	r6, #1
 8000798:	e7ee      	b.n	8000778 <__libc_init_array+0xc>
 800079a:	00b3      	lsls	r3, r6, #2
 800079c:	58eb      	ldr	r3, [r5, r3]
 800079e:	4798      	blx	r3
 80007a0:	3601      	adds	r6, #1
 80007a2:	e7f2      	b.n	800078a <__libc_init_array+0x1e>
 80007a4:	080007cc 	.word	0x080007cc
 80007a8:	080007cc 	.word	0x080007cc
 80007ac:	080007d0 	.word	0x080007d0
 80007b0:	080007cc 	.word	0x080007cc

080007b4 <_init>:
 80007b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007b6:	46c0      	nop			; (mov r8, r8)
 80007b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007ba:	bc08      	pop	{r3}
 80007bc:	469e      	mov	lr, r3
 80007be:	4770      	bx	lr

080007c0 <_fini>:
 80007c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007c2:	46c0      	nop			; (mov r8, r8)
 80007c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007c6:	bc08      	pop	{r3}
 80007c8:	469e      	mov	lr, r3
 80007ca:	4770      	bx	lr
